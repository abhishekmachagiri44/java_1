# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# name: CI

# on:
#   push:
#     branches:
#       - master
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#         # settings-path: ${{ github.workspace }} # location for the settings.xml file

#     - name: Build with Maven
#       run: mvn -B package --file pom.xml

#     - name: Publish to GitHub Packages Apache Maven
#       run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#       env:
#         GITHUB_TOKEN: ${{ github.token }}
name: CI

on:
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['11']
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    - name: print Java version
      run: java -version
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build
      run: mvn --no-transfer-progress -B clean package --file pom.xml
